{
  "info": {
    "name": "Payment Service API",
    "description": "A comprehensive payment gateway service that handles payments, refunds, and payment methods. This service integrates with Stripe and M-Pesa for real payment processing in test/sandbox mode.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{auth_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "{{base_url}}",
      "type": "string"
    },
    {
      "key": "auth_token",
      "value": "test-token",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "ngrok-skip-browser-warning",
            "value": "true",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{base_url}}/",
          "host": ["{{base_url}}"],
          "path": [""]
        },
        "description": "Check if the payment service is running"
      },
      "response": [
        {
          "name": "Success",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/",
              "host": ["{{base_url}}"],
              "path": [""]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "cookie": [],
          "body": "{\n  \"status\": \"ok\",\n  \"message\": \"Payment service is running ðŸš€\"\n}"
        }
      ]
    },
    {
      "name": "Payments",
      "item": [
        {
          "name": "Create Payment - Stripe Visa Success",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              },
              {
                "key": "ngrok-skip-browser-warning",
                "value": "true",
                "type": "text"
              },
              {
                "key": "X-Request-Id",
                "value": "{{$randomUUID}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"550e8400-e29b-41d4-a716-446655440000\",\n  \"orderId\": \"stripe_visa_success_001\",\n  \"amount\": 2500,\n  \"currency\": \"USD\",\n  \"paymentMethod\": {\n    \"type\": \"CARD\",\n    \"token\": \"tok_visa\",\n    \"brand\": \"VISA\",\n    \"last4\": \"4242\"\n  },\n  \"metadata\": {\n    \"order\": {\n      \"id\": \"stripe_visa_success_001\",\n      \"description\": \"Premium subscription purchase\",\n      \"items\": [\"Premium Plan\", \"Extra Storage\"],\n      \"totalItems\": 2,\n      \"shippingAddress\": \"Nairobi, Kenya\"\n    },\n    \"user\": {\n      \"id\": \"550e8400-e29b-41d4-a716-446655440000\",\n      \"email\": \"user@example.com\",\n      \"name\": \"John Doe\",\n      \"phone\": \"+254712345678\"\n    },\n    \"gateway\": \"stripe\",\n    \"testMode\": true\n  },\n  \"retry\": false\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/payments",
              "host": ["{{base_url}}"],
              "path": ["payments"]
            },
            "description": "Create a Stripe payment with Visa card (successful test)"
          }
        },
        {
          "name": "Create Payment - Stripe Mastercard Success",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              },
              {
                "key": "ngrok-skip-browser-warning",
                "value": "true",
                "type": "text"
              },
              {
                "key": "X-Request-Id",
                "value": "{{$randomUUID}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"550e8400-e29b-41d4-a716-446655440001\",\n  \"orderId\": \"stripe_mastercard_success_001\",\n  \"amount\": 5000,\n  \"currency\": \"USD\",\n  \"paymentMethod\": {\n    \"type\": \"CARD\",\n    \"token\": \"tok_mastercard\",\n    \"brand\": \"MASTERCARD\",\n    \"last4\": \"4444\"\n  },\n  \"metadata\": {\n    \"order\": {\n      \"id\": \"stripe_mastercard_success_001\",\n      \"description\": \"Digital product purchase\",\n      \"items\": [\"E-book\", \"Video Course\"],\n      \"totalItems\": 2,\n      \"shippingAddress\": \"Digital Delivery\"\n    },\n    \"user\": {\n      \"id\": \"550e8400-e29b-41d4-a716-446655440001\",\n      \"email\": \"mastercard@example.com\",\n      \"name\": \"Jane Smith\",\n      \"phone\": \"+254712345679\"\n    },\n    \"gateway\": \"stripe\",\n    \"testMode\": true\n  },\n  \"retry\": false\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/payments",
              "host": ["{{base_url}}"],
              "path": ["payments"]
            },
            "description": "Create a Stripe payment with Mastercard (successful test)"
          }
        },
        {
          "name": "Create Payment - Stripe Declined",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              },
              {
                "key": "ngrok-skip-browser-warning",
                "value": "true",
                "type": "text"
              },
              {
                "key": "X-Request-Id",
                "value": "{{$randomUUID}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"550e8400-e29b-41d4-a716-446655440002\",\n  \"orderId\": \"stripe_declined_001\",\n  \"amount\": 1500,\n  \"currency\": \"USD\",\n  \"paymentMethod\": {\n    \"type\": \"CARD\",\n    \"token\": \"tok_chargeDeclined\",\n    \"brand\": \"VISA\",\n    \"last4\": \"0002\"\n  },\n  \"metadata\": {\n    \"order\": {\n      \"id\": \"stripe_declined_001\",\n      \"description\": \"Test declined payment\",\n      \"items\": [\"Test Product\"],\n      \"totalItems\": 1,\n      \"shippingAddress\": \"Test Address\"\n    },\n    \"user\": {\n      \"id\": \"550e8400-e29b-41d4-a716-446655440002\",\n      \"email\": \"declined@example.com\",\n      \"name\": \"Test User\",\n      \"phone\": \"+254712345680\"\n    },\n    \"gateway\": \"stripe\",\n    \"testMode\": true\n  },\n  \"retry\": false\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/payments",
              "host": ["{{base_url}}"],
              "path": ["payments"]
            },
            "description": "Create a Stripe payment that will be declined (test)"
          }
        },
        {
          "name": "Create Payment - M-Pesa STK Push",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              },
              {
                "key": "ngrok-skip-browser-warning",
                "value": "true",
                "type": "text"
              },
              {
                "key": "X-Request-Id",
                "value": "{{$randomUUID}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"550e8400-e29b-41d4-a716-446655440100\",\n  \"orderId\": \"mpesa_success_001\",\n  \"amount\": 5000,\n  \"currency\": \"KES\",\n  \"paymentMethod\": {\n    \"type\": \"MPESA\",\n    \"phoneNumber\": \"254728287616\"\n  },\n  \"metadata\": {\n    \"order\": {\n      \"id\": \"mpesa_success_001\",\n      \"description\": \"Mobile money payment\",\n      \"items\": [\"Digital Product\"],\n      \"totalItems\": 1,\n      \"shippingAddress\": \"Digital Delivery\"\n    },\n    \"user\": {\n      \"id\": \"550e8400-e29b-41d4-a716-446655440100\",\n      \"email\": \"mpesa@example.com\",\n      \"name\": \"M-Pesa User\",\n      \"phone\": \"254728287616\"\n    },\n    \"gateway\": \"mpesa\",\n    \"phoneNumber\": \"254728287616\",\n    \"testMode\": true\n  },\n  \"retry\": false\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/payments",
              "host": ["{{base_url}}"],
              "path": ["payments"]
            },
            "description": "Create an M-Pesa STK Push payment"
          }
        },
        {
          "name": "Create Payment - M-Pesa Higher Amount",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              },
              {
                "key": "ngrok-skip-browser-warning",
                "value": "true",
                "type": "text"
              },
              {
                "key": "X-Request-Id",
                "value": "{{$randomUUID}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"550e8400-e29b-41d4-a716-446655440101\",\n  \"orderId\": \"mpesa_success_002\",\n  \"amount\": 15000,\n  \"currency\": \"KES\",\n  \"paymentMethod\": {\n    \"type\": \"MPESA\",\n    \"phoneNumber\": \"254728287616\"\n  },\n  \"metadata\": {\n    \"order\": {\n      \"id\": \"mpesa_success_002\",\n      \"description\": \"Premium mobile payment\",\n      \"items\": [\"Premium Plan\", \"Mobile Access\"],\n      \"totalItems\": 2,\n      \"shippingAddress\": \"Mobile Delivery\"\n    },\n    \"user\": {\n      \"id\": \"550e8400-e29b-41d4-a716-446655440101\",\n      \"email\": \"premium@example.com\",\n      \"name\": \"Premium User\",\n      \"phone\": \"254728287616\"\n    },\n    \"gateway\": \"mpesa\",\n    \"phoneNumber\": \"254728287616\",\n    \"testMode\": true\n  },\n  \"retry\": false\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/payments",
              "host": ["{{base_url}}"],
              "path": ["payments"]
            },
            "description": "Create an M-Pesa STK Push payment with higher amount"
          }
        },
        {
          "name": "Get Payment by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              },
              {
                "key": "ngrok-skip-browser-warning",
                "value": "true",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/payments/{{payment_id}}",
              "host": ["{{base_url}}"],
              "path": ["payments", "{{payment_id}}"]
            },
            "description": "Get a specific payment by ID"
          }
        },
        {
          "name": "Get User Payments",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              },
              {
                "key": "ngrok-skip-browser-warning",
                "value": "true",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/payments/user/{{user_id}}?limit=20&offset=0&status=",
              "host": ["{{base_url}}"],
              "path": ["payments", "user", "{{user_id}}"],
              "query": [
                {
                  "key": "limit",
                  "value": "20",
                  "description": "Number of payments to return (max 100)"
                },
                {
                  "key": "offset",
                  "value": "0",
                  "description": "Number of payments to skip"
                },
                {
                  "key": "status",
                  "value": "",
                  "description": "Filter by payment status (PENDING, SUCCEEDED, FAILED, etc.)"
                }
              ]
            },
            "description": "Get all payments for a specific user with pagination"
          }
        }
      ],
      "description": "Payment operations including creation, retrieval, and user-specific queries"
    },
    {
      "name": "Refunds",
      "item": [
        {
          "name": "Create Refund",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              },
              {
                "key": "ngrok-skip-browser-warning",
                "value": "true",
                "type": "text"
              },
              {
                "key": "X-Request-Id",
                "value": "{{$randomUUID}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"paymentId\": \"{{payment_id}}\",\n  \"amount\": 1000,\n  \"reason\": \"Customer requested refund\",\n  \"metadata\": {\n    \"refundType\": \"full\",\n    \"requestedBy\": \"customer\",\n    \"notes\": \"Product not as described\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/refunds",
              "host": ["{{base_url}}"],
              "path": ["refunds"]
            },
            "description": "Create a refund for an existing payment"
          }
        },
        {
          "name": "Get Refunds",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              },
              {
                "key": "ngrok-skip-browser-warning",
                "value": "true",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/refunds?limit=20&offset=0",
              "host": ["{{base_url}}"],
              "path": ["refunds"],
              "query": [
                {
                  "key": "limit",
                  "value": "20",
                  "description": "Number of refunds to return (max 100)"
                },
                {
                  "key": "offset",
                  "value": "0",
                  "description": "Number of refunds to skip"
                }
              ]
            },
            "description": "Get all refunds with pagination"
          }
        },
        {
          "name": "Get Refund by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              },
              {
                "key": "ngrok-skip-browser-warning",
                "value": "true",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/refunds/{{refund_id}}",
              "host": ["{{base_url}}"],
              "path": ["refunds", "{{refund_id}}"]
            },
            "description": "Get a specific refund by ID"
          }
        }
      ],
      "description": "Refund operations for processing payment refunds"
    },
    {
      "name": "Payment Methods",
      "item": [
        {
          "name": "Get Payment Method Types",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              },
              {
                "key": "ngrok-skip-browser-warning",
                "value": "true",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/payment/types",
              "host": ["{{base_url}}"],
              "path": ["payment", "types"]
            },
            "description": "Get available payment method types"
          }
        },
        {
          "name": "Add Payment Method",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              },
              {
                "key": "ngrok-skip-browser-warning",
                "value": "true",
                "type": "text"
              },
              {
                "key": "X-Request-Id",
                "value": "{{$randomUUID}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"550e8400-e29b-41d4-a716-446655440000\",\n  \"type\": \"CARD\",\n  \"details\": {\n    \"brand\": \"VISA\",\n    \"last4\": \"4242\",\n    \"expMonth\": 12,\n    \"expYear\": 2025\n  },\n  \"isDefault\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/methods",
              "host": ["{{base_url}}"],
              "path": ["methods"]
            },
            "description": "Add a new payment method for a user"
          }
        },
        {
          "name": "Get User Payment Methods",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              },
              {
                "key": "ngrok-skip-browser-warning",
                "value": "true",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/methods/user/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["methods", "user", "{{user_id}}"]
            },
            "description": "Get all payment methods for a specific user"
          }
        }
      ],
      "description": "Payment method operations for managing user payment methods"
    },
    {
      "name": "Payment History",
      "item": [
        {
          "name": "Get User Payment History",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              },
              {
                "key": "ngrok-skip-browser-warning",
                "value": "true",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/payment-history/user/{{user_id}}?limit=20&offset=0",
              "host": ["{{base_url}}"],
              "path": ["payment-history", "user", "{{user_id}}"],
              "query": [
                {
                  "key": "limit",
                  "value": "20",
                  "description": "Number of history entries to return (max 100)"
                },
                {
                  "key": "offset",
                  "value": "0",
                  "description": "Number of history entries to skip"
                }
              ]
            },
            "description": "Get payment history for a specific user"
          }
        },
        {
          "name": "Get Payment History by Payment ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              },
              {
                "key": "ngrok-skip-browser-warning",
                "value": "true",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/payment-history/payment/{{payment_id}}",
              "host": ["{{base_url}}"],
              "path": ["payment-history", "payment", "{{payment_id}}"]
            },
            "description": "Get payment history for a specific payment"
          }
        }
      ],
      "description": "Payment history operations for tracking payment status changes"
    },
    {
      "name": "Webhooks",
      "item": [
        {
          "name": "Stripe Webhook",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Stripe-Signature",
                "value": "t=1234567890,v1=signature_here",
                "type": "text",
                "description": "Stripe webhook signature"
              },
              {
                "key": "ngrok-skip-browser-warning",
                "value": "true",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": \"evt_test_webhook\",\n  \"object\": \"event\",\n  \"api_version\": \"2020-08-27\",\n  \"created\": 1234567890,\n  \"data\": {\n    \"object\": {\n      \"id\": \"pi_test_payment_intent\",\n      \"object\": \"payment_intent\",\n      \"amount\": 2500,\n      \"currency\": \"usd\",\n      \"status\": \"succeeded\"\n    }\n  },\n  \"livemode\": false,\n  \"pending_webhooks\": 1,\n  \"request\": {\n    \"id\": \"req_test_request\",\n    \"idempotency_key\": null\n  },\n  \"type\": \"payment_intent.succeeded\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/webhooks/stripe",
              "host": ["{{base_url}}"],
              "path": ["webhooks", "stripe"]
            },
            "description": "Stripe webhook endpoint for payment status updates"
          }
        },
        {
          "name": "M-Pesa Webhook",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "ngrok-skip-browser-warning",
                "value": "true",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"Body\": {\n    \"stkCallback\": {\n      \"MerchantRequestID\": \"29115-34620561-1\",\n      \"CheckoutRequestID\": \"ws_CO_23092025214653812708374149\",\n      \"ResultCode\": 0,\n      \"ResultDesc\": \"The service request is processed successfully.\",\n      \"CallbackMetadata\": {\n        \"Item\": [\n          {\n            \"Name\": \"Amount\",\n            \"Value\": 1000\n          },\n          {\n            \"Name\": \"MpesaReceiptNumber\",\n            \"Value\": \"NLJ7RT61SV\"\n          },\n          {\n            \"Name\": \"TransactionDate\",\n            \"Value\": 20230920123456\n          },\n          {\n            \"Name\": \"PhoneNumber\",\n            \"Value\": 254708374149\n          }\n        ]\n      }\n    }\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/webhooks/mpesa",
              "host": ["{{base_url}}"],
              "path": ["webhooks", "mpesa"]
            },
            "description": "M-Pesa webhook endpoint for STK Push callbacks"
          }
        }
      ],
      "description": "Webhook endpoints for receiving payment status updates from payment gateways"
    },
    {
      "name": "Queue Health",
      "item": [
        {
          "name": "Get Queue Health",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              },
              {
                "key": "ngrok-skip-browser-warning",
                "value": "true",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/queue/health",
              "host": ["{{base_url}}"],
              "path": ["queue", "health"]
            },
            "description": "Check the health status of the message queue"
          }
        }
      ],
      "description": "Queue health monitoring endpoints"
    },
    {
      "name": "Test Endpoints",
      "item": [
        {
          "name": "Test Database Connection",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              },
              {
                "key": "ngrok-skip-browser-warning",
                "value": "true",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/test/db",
              "host": ["{{base_url}}"],
              "path": ["test", "db"]
            },
            "description": "Test database connection and health"
          }
        },
        {
          "name": "Test Payment Processing",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              },
              {
                "key": "ngrok-skip-browser-warning",
                "value": "true",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/test/payment",
              "host": ["{{base_url}}"],
              "path": ["test", "payment"]
            },
            "description": "Test payment processing functionality"
          }
        }
      ],
      "description": "Test endpoints for system health and functionality verification"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set default values for variables if not already set",
          "if (!pm.environment.get('base_url')) {",
          "    pm.environment.set('base_url', 'https://nonoffensive-suasively-lorri.ngrok-free.dev');",
          "}",
          "",
          "if (!pm.environment.get('auth_token')) {",
          "    pm.environment.set('auth_token', 'test-token');",
          "}",
          "",
          "// Generate random UUIDs for testing",
          "if (!pm.environment.get('user_id')) {",
          "    pm.environment.set('user_id', '550e8400-e29b-41d4-a716-446655440000');",
          "}",
          "",
          "if (!pm.environment.get('payment_id')) {",
          "    pm.environment.set('payment_id', 'c509cd44-0222-4a9f-9465-225f60ebfcb4');",
          "}",
          "",
          "if (!pm.environment.get('refund_id')) {",
          "    pm.environment.set('refund_id', 'refund-test-id');",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Basic response validation",
          "pm.test('Response status code is successful', function () {",
          "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
          "});",
          "",
          "pm.test('Response has JSON body', function () {",
          "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "});",
          "",
          "pm.test('Response time is acceptable', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "// Extract IDs from successful responses for use in other requests",
          "if (pm.response.code === 201 && pm.response.json().data && pm.response.json().data.id) {",
          "    pm.environment.set('payment_id', pm.response.json().data.id);",
          "}",
          "",
          "if (pm.response.code === 201 && pm.response.json().data && pm.response.json().data.refundId) {",
          "    pm.environment.set('refund_id', pm.response.json().data.refundId);",
          "}"
        ]
      }
    }
  ]
}
